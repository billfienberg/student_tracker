
<!DOCTYPE html>
<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
  <link rel="stylesheet" href="css/normalize.css" type="text/css" media="screen">
  <link rel="stylesheet" href="css/grid.css" type="text/css" media="screen">
  <link rel="stylesheet" href="css/style.css" type="text/css" media="screen">
  <link href='http://fonts.googleapis.com/css?family=Nunito:400,300,700' rel='stylesheet' type='text/css'>
  <script src="external/matchmedia.js"></script>
  <script src="picturefill.js"></script>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
      html, body, #map-canvas {
        height: 90%;
        margin: 0px;
        padding: 0px
      }
    </style>
    <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>
    <script>
var markersArray = [];
var markers = [];
function clearOverlays() {
  for (var i = 0; i < markersArray.length; i++ ) {
    markersArray[i].setMap(null);
  }
  markersArray.length = 0;
};

function initialize() {
  var myLatlng = new google.maps.LatLng(39.50, -98.35);
  var mapOptions = {
    zoom: 4,
    center: myLatlng
  }
  var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

  $('#origin-btn').on('click', function(e) {
      e.preventDefault();
      window.clearOverlays();
    for (var i = 0; i < gon.students.length; i ++) {

        var lat = gon.students[i].origin_lat;
        var lng = gon.students[i].origin_long;
        var position = new google.maps.LatLng(lat, lng);
        var marker = new google.maps.Marker({
          position: position,
          map: map,
          title: gon.students[i].first_name+" "+gon.students[i].last_name+" in " + gon.students[i].origin_city+", "+gon.students[i].origin_state,
          draggable: true
        })
        markersArray.push(marker);


        google.maps.event.addListener(marker, 'click', function() {
            map.setZoom(8);
            map.setCenter(marker.getPosition());
          });

      };


    });

    $('#current-btn').on('click', function(e) {
      e.preventDefault();
      window.clearOverlays();
      for (var i = 0; i < gon.students.length; i ++) {
        var lat = gon.students[i].current_lat;
        var lng = gon.students[i].current_long;
        var position = new google.maps.LatLng(lat, lng);

        var marker = new google.maps.Marker({
          position: position,
          map: map,
          title: gon.students[i].first_name+" "+gon.students[i].last_name+" in " + gon.students[i].current_city+", "+gon.students[i].current_state,
          draggable: true
        })
        markersArray.push(marker);


        google.maps.event.addListener(marker, 'click', function() {
            map.setZoom(8);
            map.setCenter(marker.getPosition());
          });

      };

    });
    }

    google.maps.event.addDomListener(window, 'load', initialize);



    // EVERYTHING ABOVE THIS WORKS!
    var marker;
    $(document).ready(function(){

      $("#origin_to_cohort").on("click", function(e){
        e.preventDefault();
        console.log("Welcome to Austin");
        $('#map-canvas').empty();

        var map;
        var mapOptions = { center: new google.maps.LatLng(0.0, 0.0), zoom: 2,
        mapTypeId: google.maps.MapTypeId.ROADMAP };
        var markers = [];

        function initialize() {
          var myLatlng = new google.maps.LatLng(39.50, -98.35);
          var mapOptions = {
            zoom: 4,
            center: myLatlng
          }
          var map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

          var from_lat = gon.students[0].origin_lat;
          var from_lng = gon.students[0].origin_long;
          var from_position = new google.maps.LatLng(from_lat, from_lng);

          var to_lat = gon.students[0].cohort_lat;
          var to_lng = gon.students[0].cohort_long;
          var to_position = new google.maps.LatLng(to_lat, to_lng);

          from1 = new google.maps.LatLng(from_lat,from_lng);
          to1 = new google.maps.LatLng(to_lat,to_lng);

          // addMarker(from1,to1);
          marker = new google.maps.Marker({
            position: from_position,
            map: map,
            destination: to1
          })

          fromLat = from1.lat();
          fromLng = from1.lng();
          toLat = to1.lat();
          toLng = to1.lng();

          // store a LatLng for each step of the animation
          frames = [];
          for (var percent = 0; percent < 1; percent += 0.01) {
            curLat = fromLat + percent * (toLat - fromLat);
            curLng = fromLng + percent * (toLng - fromLng);
            frames.push(new google.maps.LatLng(curLat, curLng));
          }

          var move = function (marker, latlngs, index, wait, newDestination) {
            marker.setPosition(latlngs[index]);
            if(index != latlngs.length-1) {
              // call the next "frame" of the animation
              setTimeout(function() {
                move(marker, latlngs, index+1, wait, newDestination);
              }, wait);
            }
            else {
              // assign new route
              marker.position = marker.destination;
              marker.destination = newDestination;
            }
          }

          move(marker, frames, 0, 50, marker.position);
        }

        initialize();
    });
  });

    </script>
  </head>
  <body>
    <div id="map-canvas"></div>
    <%= render 'table' %>

  </body>
</html>

